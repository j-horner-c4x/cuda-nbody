{
    "version": 2,
    "cmakeMinimumRequired": {
        "major": 3,
        "minor": 31,
        "patch": 6
    },
    "configurePresets": [
        {
            "name": "common-build-settings",
            "description": "Build settings that are common to all presets.",
            "binaryDir": "${sourceDir}/build/${presetName}",
            "generator": "Ninja",
            "architecture": {
                "strategy": "external",
                "value": "x64"
            },
            "cacheVariables": {
                "cuda-nbody_BUILD_TESTING": false,
                "CMAKE_TOOLCHAIN_FILE": {
                    "value": "${sourceDir}/external/vcpkg/scripts/buildsystems/vcpkg.cmake",
                    "type": "FILEPATH"
                },
                "CMAKE_INSTALL_PREFIX": "${sourceDir}/build/install/${presetName}",
                "CMAKE_CXX_EXTENSIONS": false,
                "CMAKE_CXX_STANDARD": "23",
                "CMAKE_CXX_STANDARD_REQUIRED": true,
                "CMAKE_EXPORT_COMPILE_COMMANDS": true,
                "CMAKE_INTERPROCEDURAL_OPTIMIZATION": true,
                "CMAKE_CUDA_ARCHITECTURES": "native",
                "VCPKG_BOOTSTRAP_OPTIONS": "-disableMetrics",
                "VCPKG_OVERLAY_PORTS": "",
                "VCPKG_OVERLAY_TRIPLETS": "",
                "VCPKG_INSTALL_OPTIONS": "--x-buildtrees-root=${sourceDir}/build/vcpkg/",
                "X_VCPKG_APPLOCAL_DEPS_INSTALL": true
            },
            "hidden": true
        },
        {
            "name": "dev-mode",
            "description": "Settings for developer mode. Projects which build this project as dependency do not use developer mode.",
            "hidden": true,
            "warnings": {
                "dev": false,
                "deprecated": false,
                "uninitialized": true,
                "unusedCli": true,
                "systemVars": false
            },
            "errors": {
                "deprecated": false,
                "dev": false
            },
            "cacheVariables": {
                "cuda-nbody_DEVELOPER_MODE": true,
                "cuda-nbody_BUILD_TESTING": true,
                "BUILD_TESTING": true,
                "CMAKE_COMPILE_WARNING_AS_ERROR": true
            }
        },
        {
            "name": "compiler-debug",
            "hidden": true,
            "cacheVariables": {
                "EXTRA_FLAGS": "$env{CXX_WARNINGS} $env{CXX_EXTRA_FLAGS} $env{CXX_EXTRA_DEBUG_FLAGS} $env{CXX_ARCH_FLAGS}",
                "CMAKE_BUILD_TYPE": "Debug",
                "CMAKE_CONFIGURATION_TYPES": "Debug"
            }
        },
        {
            "name": "compiler-release",
            "hidden": true,
            "cacheVariables": {
                "EXTRA_FLAGS": "$env{CXX_WARNINGS} $env{CXX_EXTRA_FLAGS} $env{CXX_EXTRA_RELEASE_FLAGS} $env{CXX_ARCH_FLAGS}",
                "CMAKE_BUILD_TYPE": "Release",
                "CMAKE_CONFIGURATION_TYPES": "Release;MinSizeRel;RelWithDebInfo"
            }
        },
        {
            "name": "gcc",
            "hidden": true,
            "environment": {
                "CXX_WARNINGS": "-Wall -Wextra -Wpedantic -Wconversion -Wsign-conversion -Wno-noexcept-type -Wcast-qual -Wshadow -Wformat=2 -Wundef -Wfloat-equal -Wno-ignored-optimization-argument -Wno-ignored-attributes -pedantic -pedantic-errors",
                "CXX_EXTRA_FLAGS": "-fno-omit-frame-pointer",
                "CXX_EXTRA_DEBUG_FLAGS": "-O0 -g3 -DDEBUG",
                "CXX_EXTRA_RELEASE_FLAGS": ""
            }
        },
        {
            "name": "clang",
            "hidden": true,
            "environment": {
                "CXX_WARNINGS": "-Wall -Wextra -Wpedantic -Wconversion -Wsign-conversion -Wno-noexcept-type -Wcast-qual -Wshadow -Wformat=2 -Wundef -Wfloat-equal -Wno-ignored-optimization-argument -Wno-ignored-attributes -pedantic -pedantic-errors",
                "CXX_EXTRA_FLAGS": "-fno-omit-frame-pointer",
                "CXX_EXTRA_DEBUG_FLAGS": "-O0 -g3 -DDEBUG",
                "CXX_EXTRA_RELEASE_FLAGS": "",
                "CC": "clang",
                "CXX": "clang++"
            },
            "cacheVariables": {
                "CMAKE_HAVE_LIBC_PTHREAD": true
            }
        },
        {
            "name": "msvc",
            "hidden": true,
            "environment": {
                "CXX_WARNINGS": "/permissive- /utf-8 /volatile:iso /Zc:__cplusplus /Zc:throwingNew /wd4996 /external:anglebrackets /external:W0 /W4",
                "CXX_EXTRA_FLAGS": "/bigobj",
                "CXX_EXTRA_DEBUG_FLAGS": "/DDEBUG",
                "CXX_EXTRA_RELEASE_FLAGS": "/favor:INTEL64"
            }
        },
        {
            "name": "cppcheck",
            "description": "Enables cppcheck static analyzer.",
            "hidden": true,
            "cacheVariables": {
                "CMAKE_CXX_CPPCHECK": "cppcheck;--suppressions-list=${sourceDir}/cppcheck_suppressions.txt;--enable=all;--inconclusive;--force;--inline-suppr;--error-exitcode=1;--template=gcc"
            }
        },
        {
            "name": "clang-tidy",
            "description": "Enables clang-tidy static analyzer.",
            "hidden": true,
            "cacheVariables": {
                "CMAKE_CXX_CLANG_TIDY": "clang-tidy;--header-filter=${sourceDir}/*"
            }
        },
        {
            "name": "windows-default",
            "description": "Specifies common settings in Windows builds.",
            "inherits": "common-build-settings",
            "vendor": {
                "microsoft.com/VisualStudioSettings/CMake/1.0": {
                    "hostOS": [
                        "Windows"
                    ]
                }
            },
            "hidden": true
        },
        {
            "name": "windows-debug",
            "description": "Specifies debug settings in Windows builds.",
            "inherits": [
                "windows-default",
                "msvc",
                "compiler-debug"
            ],
            "hidden": true
        },
        {
            "name": "windows-release",
            "description": "Specifies release settings in Windows builds.",
            "inherits": [
                "windows-default",
                "msvc",
                "compiler-release"
            ],
            "hidden": true
        },
        {
            "name": "unix-default",
            "description": "Specifies common settings in Unix builds.",
            "inherits": "common-build-settings",
            "vendor": {
                "microsoft.com/VisualStudioSettings/CMake/1.0": {
                    "hostOS": [
                        "Linux"
                    ]
                }
            },
            "cacheVariables": {
                "CMAKE_COLOR_MAKEFILE": true,
                "CMAKE_VERBOSE_MAKEFILE": true,
                "CMAKE_POSITION_INDEPENDENT_CODE": true
            },
            "hidden": true
        },
        {
            "name": "unix-debug",
            "description": "Specifies debug settings in Unix builds.",
            "inherits": [
                "unix-default",
                "gcc",
                "compiler-debug"
            ],
            "hidden": true
        },
        {
            "name": "unix-release",
            "description": "Specifies release settings in Unix builds.",
            "inherits": [
                "unix-default",
                "gcc",
                "compiler-release"
            ],
            "hidden": true
        },
        {
            "name": "coverage-unix",
            "description": "Specifies code coverage settings in Unix builds.",
            "inherits": "unix-release",
            "cacheVariables": {
                "ENABLE_COVERAGE": true,
                "CMAKE_BUILD_TYPE": "Coverage",
                "CMAKE_CXX_FLAGS_COVERAGE": "-Og -g --coverage -fopenmp",
                "CMAKE_EXE_LINKER_FLAGS_COVERAGE": "--coverage",
                "CMAKE_SHARED_LINKER_FLAGS_COVERAGE": "--coverage"
            },
            "hidden": true
        },
        {
            "name": "coverage-ci",
            "description": "Code coverage build to run in CI.",
            "inherits": [
                "dev-mode",
                "coverage-unix"
            ],
            "generator": "Unix Makefiles",
            "cacheVariables": {
                "COVERAGE_HTML_COMMAND": ""
            }
        },
        {
            "name": "sanitize-ci",
            "description": "Sanitizer build to run in CI.",
            "inherits": [
                "dev-mode",
                "unix-release"
            ],
            "cacheVariables": {
                "CMAKE_BUILD_TYPE": "Sanitize",
                "CMAKE_CXX_FLAGS_SANITIZE": "-O2 -g -fsanitize=address,undefined -fno-omit-frame-pointer -fno-common"
            }
        },
        {
            "name": "macos",
            "description": "Minimal MacOS build for a consumer of the library.",
            "inherits": [
                "unix-default",
                "clang",
                "compiler-release"
            ],
            "generator": "Unix Makefiles",
            "vendor": {
                "microsoft.com/VisualStudioSettings/CMake/1.0": {
                    "hostOS": [
                        "macOS"
                    ]
                }
            }
        },
        {
            "name": "macos-ci",
            "description": "MacOS build to run in CI.",
            "inherits": [
                "dev-mode",
                "macos"
            ]
        },
        {
            "name": "linux",
            "description": "Minimal Linux build for a consumer of the project.",
            "inherits": [
                "unix-release"
            ],
            "generator": "Unix Makefiles"
        },
        {
            "name": "ubuntu-ci",
            "description": "Ubuntu build to run in CI.",
            "inherits": [
                "dev-mode",
                "clang-tidy",
                "cppcheck",
                "unix-release"
            ]
        },
        {
            "name": "windows",
            "description": "Minimal Windows build for a consumer of the library.",
            "inherits": "windows-release",
            "generator": "Visual Studio 17 2022",
            "architecture": {
                "strategy": "set",
                "value": "x64"
            }
        },
        {
            "name": "windows-ci",
            "description": "Windows build to run in CI.",
            "inherits": [
                "dev-mode",
                "windows"
            ]
        }
    ]
}
